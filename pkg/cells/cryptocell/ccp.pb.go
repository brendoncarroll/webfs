// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ccp.proto

package cryptocell // import "github.com/brendoncarroll/webfs/pkg/cells/cryptocell"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CellContents struct {
	Who                  *Who           `protobuf:"bytes,1,opt,name=who,proto3" json:"who,omitempty"`
	WhoAuthor            int32          `protobuf:"varint,2,opt,name=who_author,json=whoAuthor,proto3" json:"who_author,omitempty"`
	WhoSigs              map[int32]*Sig `protobuf:"bytes,3,rep,name=who_sigs,json=whoSigs,proto3" json:"who_sigs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	What                 *What          `protobuf:"bytes,4,opt,name=what,proto3" json:"what,omitempty"`
	WhatAuthor           int32          `protobuf:"varint,5,opt,name=what_author,json=whatAuthor,proto3" json:"what_author,omitempty"`
	WhatSig              *Sig           `protobuf:"bytes,6,opt,name=what_sig,json=whatSig,proto3" json:"what_sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CellContents) Reset()         { *m = CellContents{} }
func (m *CellContents) String() string { return proto.CompactTextString(m) }
func (*CellContents) ProtoMessage()    {}
func (*CellContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccp_3ff66fa99f0f0a3c, []int{0}
}
func (m *CellContents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellContents.Unmarshal(m, b)
}
func (m *CellContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellContents.Marshal(b, m, deterministic)
}
func (dst *CellContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellContents.Merge(dst, src)
}
func (m *CellContents) XXX_Size() int {
	return xxx_messageInfo_CellContents.Size(m)
}
func (m *CellContents) XXX_DiscardUnknown() {
	xxx_messageInfo_CellContents.DiscardUnknown(m)
}

var xxx_messageInfo_CellContents proto.InternalMessageInfo

func (m *CellContents) GetWho() *Who {
	if m != nil {
		return m.Who
	}
	return nil
}

func (m *CellContents) GetWhoAuthor() int32 {
	if m != nil {
		return m.WhoAuthor
	}
	return 0
}

func (m *CellContents) GetWhoSigs() map[int32]*Sig {
	if m != nil {
		return m.WhoSigs
	}
	return nil
}

func (m *CellContents) GetWhat() *What {
	if m != nil {
		return m.What
	}
	return nil
}

func (m *CellContents) GetWhatAuthor() int32 {
	if m != nil {
		return m.WhatAuthor
	}
	return 0
}

func (m *CellContents) GetWhatSig() *Sig {
	if m != nil {
		return m.WhatSig
	}
	return nil
}

type Who struct {
	Entities             []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	Admin                []int32   `protobuf:"varint,2,rep,packed,name=admin,proto3" json:"admin,omitempty"`
	Write                []int32   `protobuf:"varint,3,rep,packed,name=write,proto3" json:"write,omitempty"`
	Read                 []int32   `protobuf:"varint,4,rep,packed,name=read,proto3" json:"read,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Who) Reset()         { *m = Who{} }
func (m *Who) String() string { return proto.CompactTextString(m) }
func (*Who) ProtoMessage()    {}
func (*Who) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccp_3ff66fa99f0f0a3c, []int{1}
}
func (m *Who) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Who.Unmarshal(m, b)
}
func (m *Who) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Who.Marshal(b, m, deterministic)
}
func (dst *Who) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Who.Merge(dst, src)
}
func (m *Who) XXX_Size() int {
	return xxx_messageInfo_Who.Size(m)
}
func (m *Who) XXX_DiscardUnknown() {
	xxx_messageInfo_Who.DiscardUnknown(m)
}

var xxx_messageInfo_Who proto.InternalMessageInfo

func (m *Who) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *Who) GetAdmin() []int32 {
	if m != nil {
		return m.Admin
	}
	return nil
}

func (m *Who) GetWrite() []int32 {
	if m != nil {
		return m.Write
	}
	return nil
}

func (m *Who) GetRead() []int32 {
	if m != nil {
		return m.Read
	}
	return nil
}

type What struct {
	Payload              *EncMsg       `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Deks                 []*AsymEncMsg `protobuf:"bytes,2,rep,name=deks,proto3" json:"deks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *What) Reset()         { *m = What{} }
func (m *What) String() string { return proto.CompactTextString(m) }
func (*What) ProtoMessage()    {}
func (*What) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccp_3ff66fa99f0f0a3c, []int{2}
}
func (m *What) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_What.Unmarshal(m, b)
}
func (m *What) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_What.Marshal(b, m, deterministic)
}
func (dst *What) XXX_Merge(src proto.Message) {
	xxx_messageInfo_What.Merge(dst, src)
}
func (m *What) XXX_Size() int {
	return xxx_messageInfo_What.Size(m)
}
func (m *What) XXX_DiscardUnknown() {
	xxx_messageInfo_What.DiscardUnknown(m)
}

var xxx_messageInfo_What proto.InternalMessageInfo

func (m *What) GetPayload() *EncMsg {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *What) GetDeks() []*AsymEncMsg {
	if m != nil {
		return m.Deks
	}
	return nil
}

func init() {
	proto.RegisterType((*CellContents)(nil), "ccp.CellContents")
	proto.RegisterMapType((map[int32]*Sig)(nil), "ccp.CellContents.WhoSigsEntry")
	proto.RegisterType((*Who)(nil), "ccp.Who")
	proto.RegisterType((*What)(nil), "ccp.What")
}

func init() { proto.RegisterFile("ccp.proto", fileDescriptor_ccp_3ff66fa99f0f0a3c) }

var fileDescriptor_ccp_3ff66fa99f0f0a3c = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0xc1, 0x8a, 0xdb, 0x30,
	0x10, 0x40, 0x71, 0x6c, 0xef, 0x26, 0xe3, 0x40, 0x8b, 0xe8, 0x41, 0x04, 0x76, 0x1b, 0xb2, 0x94,
	0xe6, 0x14, 0x43, 0x5a, 0x4a, 0xdb, 0xdb, 0x76, 0xbb, 0xc7, 0x5e, 0x94, 0xc3, 0x42, 0x2f, 0x45,
	0x91, 0x55, 0x4b, 0x44, 0x91, 0x8c, 0xa4, 0xd4, 0xf8, 0xab, 0xfa, 0x8b, 0x45, 0xe3, 0xa4, 0xe4,
	0x94, 0x99, 0x37, 0xa3, 0x79, 0x19, 0x59, 0x30, 0x13, 0xa2, 0xdb, 0x74, 0xde, 0x45, 0x47, 0x72,
	0x21, 0xba, 0xc5, 0x5c, 0xf8, 0xa1, 0x8b, 0x6e, 0x44, 0xab, 0xbf, 0x13, 0x98, 0x3f, 0x49, 0x63,
	0x9e, 0x9c, 0x8d, 0xd2, 0xc6, 0x40, 0x16, 0x90, 0xf7, 0xca, 0xd1, 0x6c, 0x99, 0xad, 0xab, 0xed,
	0x74, 0x93, 0x0e, 0xbf, 0x28, 0xc7, 0x12, 0x24, 0x77, 0x00, 0xbd, 0x72, 0xbf, 0xf8, 0x29, 0x2a,
	0xe7, 0xe9, 0x64, 0x99, 0xad, 0x4b, 0x36, 0xeb, 0x95, 0x7b, 0x44, 0x40, 0xbe, 0xc0, 0x34, 0x95,
	0x83, 0x6e, 0x03, 0xcd, 0x97, 0xf9, 0xba, 0xda, 0xde, 0xe3, 0xf9, 0xeb, 0xf9, 0x69, 0xd8, 0x4e,
	0xb7, 0xe1, 0xd9, 0x46, 0x3f, 0xb0, 0xdb, 0x7e, 0xcc, 0xc8, 0x1d, 0x14, 0xbd, 0xe2, 0x91, 0x16,
	0xa8, 0x9d, 0x9d, 0xb5, 0x3c, 0x32, 0xc4, 0xe4, 0x2d, 0x54, 0xe9, 0xf7, 0x62, 0x2e, 0xd1, 0x0c,
	0x09, 0x9d, 0xd5, 0x0f, 0x49, 0xcd, 0x63, 0x72, 0xd3, 0x9b, 0xab, 0xbf, 0xbe, 0xd3, 0x6d, 0x92,
	0xf0, 0xb8, 0xd3, 0xed, 0xe2, 0x3b, 0xcc, 0xaf, 0xed, 0xe4, 0x35, 0xe4, 0x07, 0x39, 0xe0, 0xaa,
	0x25, 0x4b, 0x21, 0xb9, 0x87, 0xf2, 0x0f, 0x37, 0x27, 0x89, 0xbb, 0x5d, 0xcf, 0x18, 0xf1, 0xd7,
	0xc9, 0xe7, 0x6c, 0x65, 0x21, 0x7f, 0x51, 0x8e, 0xbc, 0x87, 0xa9, 0xb4, 0x51, 0x47, 0x2d, 0x03,
	0xcd, 0x70, 0xd9, 0x0a, 0xbb, 0x9f, 0x13, 0x1c, 0xd8, 0xff, 0x22, 0x79, 0x03, 0x25, 0x6f, 0x8e,
	0xda, 0xd2, 0xc9, 0x32, 0x5f, 0x97, 0x6c, 0x4c, 0x12, 0xed, 0xbd, 0x8e, 0x12, 0x2f, 0xaa, 0x64,
	0x63, 0x42, 0x08, 0x14, 0x5e, 0xf2, 0x86, 0x16, 0x08, 0x31, 0x5e, 0x31, 0x28, 0xd2, 0x4d, 0x90,
	0x77, 0x70, 0xdb, 0xf1, 0xc1, 0x38, 0xde, 0x9c, 0x3f, 0xce, 0xc5, 0x27, 0x7e, 0x84, 0x96, 0x5d,
	0x6a, 0xe4, 0x01, 0x8a, 0x46, 0x1e, 0x02, 0xda, 0xaa, 0xed, 0x2b, 0xec, 0x79, 0x0c, 0xc3, 0xf1,
	0xdc, 0x87, 0xc5, 0x6f, 0x9f, 0x7e, 0x7e, 0x6c, 0x75, 0x54, 0xa7, 0xfd, 0x46, 0xb8, 0x63, 0xbd,
	0xf7, 0xd2, 0x36, 0xce, 0x0a, 0xee, 0xbd, 0x33, 0xa6, 0xee, 0xe5, 0xfe, 0x77, 0xa8, 0xbb, 0x43,
	0x5b, 0x0b, 0x69, 0x4c, 0xa8, 0xc7, 0xf7, 0x92, 0xe2, 0xfd, 0x0d, 0x3e, 0x9a, 0x0f, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xd6, 0x52, 0xb2, 0x69, 0x54, 0x02, 0x00, 0x00,
}
