// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crypto.proto

package cryptocell // import "github.com/brendoncarroll/webfs/pkg/cells/cryptocell"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EncAlgo int32

const (
	EncAlgo_UNKNOWN_EA        EncAlgo = 0
	EncAlgo_XCHACHA20POLY1305 EncAlgo = 1
)

var EncAlgo_name = map[int32]string{
	0: "UNKNOWN_EA",
	1: "XCHACHA20POLY1305",
}
var EncAlgo_value = map[string]int32{
	"UNKNOWN_EA":        0,
	"XCHACHA20POLY1305": 1,
}

func (x EncAlgo) String() string {
	return proto.EnumName(EncAlgo_name, int32(x))
}
func (EncAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{0}
}

type HashFunc int32

const (
	HashFunc_UNKNOWN_HF HashFunc = 0
	// might as well use a number at least someone else is using
	// https://github.com/multiformats/multicodec/blob/master/table.csv
	HashFunc_SHA256 HashFunc = 18
)

var HashFunc_name = map[int32]string{
	0:  "UNKNOWN_HF",
	18: "SHA256",
}
var HashFunc_value = map[string]int32{
	"UNKNOWN_HF": 0,
	"SHA256":     18,
}

func (x HashFunc) String() string {
	return proto.EnumName(HashFunc_name, int32(x))
}
func (HashFunc) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{1}
}

type SigAlgo int32

const (
	SigAlgo_UNKNOWN_SA SigAlgo = 0
	SigAlgo_ED25519    SigAlgo = 1
)

var SigAlgo_name = map[int32]string{
	0: "UNKNOWN_SA",
	1: "ED25519",
}
var SigAlgo_value = map[string]int32{
	"UNKNOWN_SA": 0,
	"ED25519":    1,
}

func (x SigAlgo) String() string {
	return proto.EnumName(SigAlgo_name, int32(x))
}
func (SigAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{2}
}

type AsymEncAlgo int32

const (
	AsymEncAlgo_UNKNOWN_AEA        AsymEncAlgo = 0
	AsymEncAlgo_CURVE25519_NACLBOX AsymEncAlgo = 1
)

var AsymEncAlgo_name = map[int32]string{
	0: "UNKNOWN_AEA",
	1: "CURVE25519_NACLBOX",
}
var AsymEncAlgo_value = map[string]int32{
	"UNKNOWN_AEA":        0,
	"CURVE25519_NACLBOX": 1,
}

func (x AsymEncAlgo) String() string {
	return proto.EnumName(AsymEncAlgo_name, int32(x))
}
func (AsymEncAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{3}
}

type EncMsg struct {
	Algo                 EncAlgo  `protobuf:"varint,1,opt,name=algo,proto3,enum=ccp.EncAlgo" json:"algo,omitempty"`
	Ctext                []byte   `protobuf:"bytes,2,opt,name=ctext,proto3" json:"ctext,omitempty"`
	Nonce                []byte   `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncMsg) Reset()         { *m = EncMsg{} }
func (m *EncMsg) String() string { return proto.CompactTextString(m) }
func (*EncMsg) ProtoMessage()    {}
func (*EncMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{0}
}
func (m *EncMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncMsg.Unmarshal(m, b)
}
func (m *EncMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncMsg.Marshal(b, m, deterministic)
}
func (dst *EncMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncMsg.Merge(dst, src)
}
func (m *EncMsg) XXX_Size() int {
	return xxx_messageInfo_EncMsg.Size(m)
}
func (m *EncMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_EncMsg.DiscardUnknown(m)
}

var xxx_messageInfo_EncMsg proto.InternalMessageInfo

func (m *EncMsg) GetAlgo() EncAlgo {
	if m != nil {
		return m.Algo
	}
	return EncAlgo_UNKNOWN_EA
}

func (m *EncMsg) GetCtext() []byte {
	if m != nil {
		return m.Ctext
	}
	return nil
}

func (m *EncMsg) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

type Sig struct {
	HashFunc             HashFunc `protobuf:"varint,1,opt,name=hash_func,json=hashFunc,proto3,enum=ccp.HashFunc" json:"hash_func,omitempty"`
	Algo                 SigAlgo  `protobuf:"varint,2,opt,name=algo,proto3,enum=ccp.SigAlgo" json:"algo,omitempty"`
	Sig                  []byte   `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sig) Reset()         { *m = Sig{} }
func (m *Sig) String() string { return proto.CompactTextString(m) }
func (*Sig) ProtoMessage()    {}
func (*Sig) Descriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{1}
}
func (m *Sig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sig.Unmarshal(m, b)
}
func (m *Sig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sig.Marshal(b, m, deterministic)
}
func (dst *Sig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sig.Merge(dst, src)
}
func (m *Sig) XXX_Size() int {
	return xxx_messageInfo_Sig.Size(m)
}
func (m *Sig) XXX_DiscardUnknown() {
	xxx_messageInfo_Sig.DiscardUnknown(m)
}

var xxx_messageInfo_Sig proto.InternalMessageInfo

func (m *Sig) GetHashFunc() HashFunc {
	if m != nil {
		return m.HashFunc
	}
	return HashFunc_UNKNOWN_HF
}

func (m *Sig) GetAlgo() SigAlgo {
	if m != nil {
		return m.Algo
	}
	return SigAlgo_UNKNOWN_SA
}

func (m *Sig) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type AsymEncMsg struct {
	Algo                 AsymEncAlgo `protobuf:"varint,1,opt,name=algo,proto3,enum=ccp.AsymEncAlgo" json:"algo,omitempty"`
	SenderKey            *Key        `protobuf:"bytes,2,opt,name=sender_key,json=senderKey,proto3" json:"sender_key,omitempty"`
	Ctext                []byte      `protobuf:"bytes,3,opt,name=ctext,proto3" json:"ctext,omitempty"`
	Nonce                []byte      `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AsymEncMsg) Reset()         { *m = AsymEncMsg{} }
func (m *AsymEncMsg) String() string { return proto.CompactTextString(m) }
func (*AsymEncMsg) ProtoMessage()    {}
func (*AsymEncMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{2}
}
func (m *AsymEncMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsymEncMsg.Unmarshal(m, b)
}
func (m *AsymEncMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsymEncMsg.Marshal(b, m, deterministic)
}
func (dst *AsymEncMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsymEncMsg.Merge(dst, src)
}
func (m *AsymEncMsg) XXX_Size() int {
	return xxx_messageInfo_AsymEncMsg.Size(m)
}
func (m *AsymEncMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_AsymEncMsg.DiscardUnknown(m)
}

var xxx_messageInfo_AsymEncMsg proto.InternalMessageInfo

func (m *AsymEncMsg) GetAlgo() AsymEncAlgo {
	if m != nil {
		return m.Algo
	}
	return AsymEncAlgo_UNKNOWN_AEA
}

func (m *AsymEncMsg) GetSenderKey() *Key {
	if m != nil {
		return m.SenderKey
	}
	return nil
}

func (m *AsymEncMsg) GetCtext() []byte {
	if m != nil {
		return m.Ctext
	}
	return nil
}

func (m *AsymEncMsg) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

type Entity struct {
	SigningKey           *Key     `protobuf:"bytes,1,opt,name=signing_key,json=signingKey,proto3" json:"signing_key,omitempty"`
	EncryptionKey        *Key     `protobuf:"bytes,2,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{3}
}
func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (dst *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(dst, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetSigningKey() *Key {
	if m != nil {
		return m.SigningKey
	}
	return nil
}

func (m *Entity) GetEncryptionKey() *Key {
	if m != nil {
		return m.EncryptionKey
	}
	return nil
}

type Key struct {
	// Types that are valid to be assigned to Key:
	//	*Key_Ed25519_Private
	//	*Key_Ed25519
	//	*Key_Curve25519_Private
	//	*Key_Curve25519
	Key                  isKey_Key `protobuf_oneof:"key"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_crypto_9b7dfc9759c81e6c, []int{4}
}
func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (dst *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(dst, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

type isKey_Key interface {
	isKey_Key()
}

type Key_Ed25519_Private struct {
	Ed25519_Private []byte `protobuf:"bytes,1,opt,name=Ed25519_Private,json=Ed25519Private,proto3,oneof"`
}

type Key_Ed25519 struct {
	Ed25519 []byte `protobuf:"bytes,2,opt,name=Ed25519,proto3,oneof"`
}

type Key_Curve25519_Private struct {
	Curve25519_Private []byte `protobuf:"bytes,3,opt,name=Curve25519_Private,json=Curve25519Private,proto3,oneof"`
}

type Key_Curve25519 struct {
	Curve25519 []byte `protobuf:"bytes,4,opt,name=Curve25519,proto3,oneof"`
}

func (*Key_Ed25519_Private) isKey_Key() {}

func (*Key_Ed25519) isKey_Key() {}

func (*Key_Curve25519_Private) isKey_Key() {}

func (*Key_Curve25519) isKey_Key() {}

func (m *Key) GetKey() isKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Key) GetEd25519_Private() []byte {
	if x, ok := m.GetKey().(*Key_Ed25519_Private); ok {
		return x.Ed25519_Private
	}
	return nil
}

func (m *Key) GetEd25519() []byte {
	if x, ok := m.GetKey().(*Key_Ed25519); ok {
		return x.Ed25519
	}
	return nil
}

func (m *Key) GetCurve25519_Private() []byte {
	if x, ok := m.GetKey().(*Key_Curve25519_Private); ok {
		return x.Curve25519_Private
	}
	return nil
}

func (m *Key) GetCurve25519() []byte {
	if x, ok := m.GetKey().(*Key_Curve25519); ok {
		return x.Curve25519
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Key) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Key_OneofMarshaler, _Key_OneofUnmarshaler, _Key_OneofSizer, []interface{}{
		(*Key_Ed25519_Private)(nil),
		(*Key_Ed25519)(nil),
		(*Key_Curve25519_Private)(nil),
		(*Key_Curve25519)(nil),
	}
}

func _Key_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Key)
	// key
	switch x := m.Key.(type) {
	case *Key_Ed25519_Private:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Ed25519_Private)
	case *Key_Ed25519:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Ed25519)
	case *Key_Curve25519_Private:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Curve25519_Private)
	case *Key_Curve25519:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Curve25519)
	case nil:
	default:
		return fmt.Errorf("Key.Key has unexpected type %T", x)
	}
	return nil
}

func _Key_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Key)
	switch tag {
	case 1: // key.Ed25519_Private
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Key = &Key_Ed25519_Private{x}
		return true, err
	case 2: // key.Ed25519
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Key = &Key_Ed25519{x}
		return true, err
	case 3: // key.Curve25519_Private
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Key = &Key_Curve25519_Private{x}
		return true, err
	case 4: // key.Curve25519
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Key = &Key_Curve25519{x}
		return true, err
	default:
		return false, nil
	}
}

func _Key_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Key)
	// key
	switch x := m.Key.(type) {
	case *Key_Ed25519_Private:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Ed25519_Private)))
		n += len(x.Ed25519_Private)
	case *Key_Ed25519:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Ed25519)))
		n += len(x.Ed25519)
	case *Key_Curve25519_Private:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Curve25519_Private)))
		n += len(x.Curve25519_Private)
	case *Key_Curve25519:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Curve25519)))
		n += len(x.Curve25519)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*EncMsg)(nil), "ccp.EncMsg")
	proto.RegisterType((*Sig)(nil), "ccp.Sig")
	proto.RegisterType((*AsymEncMsg)(nil), "ccp.AsymEncMsg")
	proto.RegisterType((*Entity)(nil), "ccp.Entity")
	proto.RegisterType((*Key)(nil), "ccp.Key")
	proto.RegisterEnum("ccp.EncAlgo", EncAlgo_name, EncAlgo_value)
	proto.RegisterEnum("ccp.HashFunc", HashFunc_name, HashFunc_value)
	proto.RegisterEnum("ccp.SigAlgo", SigAlgo_name, SigAlgo_value)
	proto.RegisterEnum("ccp.AsymEncAlgo", AsymEncAlgo_name, AsymEncAlgo_value)
}

func init() { proto.RegisterFile("crypto.proto", fileDescriptor_crypto_9b7dfc9759c81e6c) }

var fileDescriptor_crypto_9b7dfc9759c81e6c = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xd1, 0x6e, 0xda, 0x30,
	0x14, 0x25, 0x4d, 0x5b, 0xe8, 0x85, 0xd2, 0xd4, 0xda, 0x26, 0xb4, 0x27, 0x84, 0xa6, 0xae, 0xcd,
	0x03, 0xa1, 0xe9, 0x40, 0xda, 0x63, 0xc8, 0x52, 0x45, 0xa2, 0x83, 0x2a, 0xa8, 0x5d, 0xb7, 0x17,
	0x14, 0x8c, 0xeb, 0x44, 0xa4, 0x76, 0x94, 0x84, 0x6e, 0xf9, 0x82, 0xfd, 0xc9, 0xbe, 0x73, 0x8a,
	0x63, 0x46, 0x3a, 0xf5, 0xcd, 0x3e, 0xe7, 0xfa, 0xdc, 0x73, 0x7c, 0x6d, 0x68, 0xe1, 0x24, 0x8f,
	0x33, 0xde, 0x8f, 0x13, 0x9e, 0x71, 0xa4, 0x62, 0x1c, 0xf7, 0xee, 0xe1, 0xd0, 0x61, 0xf8, 0x6b,
	0x4a, 0x51, 0x17, 0xf6, 0xfd, 0x88, 0xf2, 0x8e, 0xd2, 0x55, 0xce, 0xdb, 0x66, 0xab, 0x8f, 0x71,
	0xdc, 0x77, 0x18, 0xb6, 0x22, 0xca, 0x3d, 0xc1, 0xa0, 0x37, 0x70, 0x80, 0x33, 0xf2, 0x2b, 0xeb,
	0xec, 0x75, 0x95, 0xf3, 0x96, 0x57, 0x6e, 0x0a, 0x94, 0x71, 0x86, 0x49, 0x47, 0x2d, 0x51, 0xb1,
	0xe9, 0x11, 0x50, 0xe7, 0x21, 0x45, 0x3a, 0x1c, 0x05, 0x7e, 0x1a, 0x2c, 0x1e, 0x37, 0x0c, 0x4b,
	0xe5, 0x63, 0xa1, 0xec, 0xfa, 0x69, 0x70, 0xbd, 0x61, 0xd8, 0x6b, 0x04, 0x72, 0xf5, 0xcf, 0xc0,
	0x5e, 0xc5, 0xc0, 0x3c, 0xa4, 0x15, 0x03, 0x1a, 0xa8, 0x69, 0x48, 0x65, 0xa3, 0x62, 0xd9, 0xfb,
	0xad, 0x00, 0x58, 0x69, 0xfe, 0x24, 0x33, 0x7c, 0x78, 0x91, 0x41, 0x13, 0x12, 0x92, 0xae, 0xc8,
	0x7c, 0x04, 0x48, 0x09, 0x5b, 0x91, 0x64, 0xb1, 0x26, 0xb9, 0x68, 0xd7, 0x34, 0x1b, 0xa2, 0x76,
	0x42, 0x72, 0xef, 0xa8, 0xe4, 0x26, 0x24, 0xdf, 0x05, 0x56, 0x5f, 0x0d, 0xbc, 0x5f, 0x0d, 0xbc,
	0x2a, 0x2e, 0x32, 0x0b, 0xb3, 0x1c, 0x5d, 0x40, 0x33, 0x0d, 0x29, 0x0b, 0x19, 0x15, 0xfa, 0xca,
	0x7f, 0xfa, 0x20, 0xc9, 0xa2, 0x81, 0x01, 0x6d, 0xc2, 0xc4, 0x50, 0x42, 0xce, 0x5e, 0x75, 0x73,
	0xbc, 0xe3, 0x27, 0x24, 0xef, 0xfd, 0x51, 0x40, 0x2d, 0x0e, 0x5e, 0xc0, 0x89, 0xb3, 0x32, 0x87,
	0xc3, 0xcb, 0xcf, 0x8b, 0xdb, 0x24, 0x7c, 0xf6, 0x33, 0x22, 0xfa, 0xb4, 0xdc, 0x9a, 0xd7, 0x96,
	0x84, 0xc4, 0xd1, 0x7b, 0xa8, 0x4b, 0xa4, 0x9c, 0x9b, 0x5b, 0xf3, 0xb6, 0x00, 0x32, 0x00, 0xd9,
	0x9b, 0xe4, 0x99, 0xbc, 0x54, 0x52, 0x65, 0xd9, 0xe9, 0x8e, 0xdb, 0x8a, 0x75, 0x01, 0x76, 0x60,
	0x79, 0x01, 0x6e, 0xcd, 0xab, 0x60, 0xe3, 0x03, 0x50, 0xd7, 0x24, 0xd7, 0x07, 0x50, 0x97, 0x97,
	0x8e, 0xda, 0x00, 0x77, 0xd3, 0xc9, 0x74, 0xf6, 0x6d, 0xba, 0x70, 0x2c, 0xad, 0x86, 0xde, 0xc2,
	0xe9, 0x83, 0xed, 0x5a, 0xb6, 0x6b, 0x99, 0x83, 0xdb, 0xd9, 0xcd, 0xf7, 0xcb, 0xab, 0xc1, 0x50,
	0x53, 0xf4, 0x33, 0x68, 0x6c, 0x1f, 0x45, 0xf5, 0x88, 0x7b, 0xad, 0xd5, 0x10, 0xc0, 0xe1, 0xdc,
	0xb5, 0xcc, 0xe1, 0x48, 0x43, 0xfa, 0x19, 0xd4, 0xe5, 0xab, 0xa8, 0x96, 0xcd, 0x0b, 0xe5, 0x26,
	0xd4, 0x9d, 0x2f, 0xc2, 0x86, 0xa6, 0xe8, 0x23, 0x68, 0x56, 0x46, 0x8f, 0x4e, 0xa0, 0xb9, 0xad,
	0xb5, 0x84, 0x8d, 0x77, 0x80, 0xec, 0x3b, 0xef, 0xde, 0x29, 0xb3, 0x4f, 0x2d, 0xfb, 0x66, 0x3c,
	0x7b, 0xd0, 0x94, 0xf1, 0xe8, 0xc7, 0x27, 0x1a, 0x66, 0xc1, 0x66, 0xd9, 0xc7, 0xfc, 0xc9, 0x58,
	0x26, 0x84, 0xad, 0x38, 0xc3, 0x7e, 0x92, 0xf0, 0x28, 0x32, 0x7e, 0x92, 0xe5, 0x63, 0x6a, 0xc4,
	0x6b, 0x6a, 0x60, 0x12, 0x45, 0xa9, 0x51, 0x7e, 0xa8, 0x62, 0xbd, 0x3c, 0x14, 0xbf, 0xea, 0xea,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xc5, 0x31, 0x1e, 0x65, 0x03, 0x00, 0x00,
}
